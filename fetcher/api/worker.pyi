from pathlib import Path
from typing import Any

import requests

from fetcher.api import model, token

class API:
    def __init__(
        self, base_url: str, access_token: token.AccessToken | None = None
    ) -> None: ...
    @property
    def header(self) -> dict[str, str] | None: ...
    def fetch_jobs(self, **kwargs: Any) -> dict[str, model.JobSpecs]: ...
    def get_file(self, file_id: str, path: Path) -> requests.Response: ...
    def build_file_url(self, file_id: str) -> str: ...
    def _request(
        self, method: str, endpoint: str, **kwargs: dict[str, Any]
    ) -> requests.Response: ...

class JobAPI:
    def __init__(self, job_id: str, base_api: API) -> None: ...
    @property
    def job_url(self) -> str: ...
    @property
    def status_url(self) -> str: ...
    @property
    def file_post_url(self) -> str: ...
    def ping(
        self, status: str, exit_code: int | None, body: str | None
    ) -> requests.Response: ...
    def get_file(self, file_id: str, path: Path) -> requests.Response: ...
    def put_file(
        self, path: Path, path_api: str | Path | None, file_type: str
    ) -> requests.Response: ...
    def put_file_native(
        self, path: Path, f_type: str, path_api: Path
    ) -> requests.Response: ...
